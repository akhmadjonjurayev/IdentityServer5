# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
  - stage: Build
    displayName: Build CI
    pool:
      vmImage: ubuntu-latest
    jobs: 
     - job: Build
       displayName: Build CI
       steps:
         - checkout: self
           persistCredentials: true
           
         - task: NuGetCommand@2
           displayName: Nuget restore
           inputs:
             command: 'restore'
             restoreSolution: '**/*.sln'
             feedsToUse: 'select'
          
         - task: DotNetCoreCLI@2
           displayName: build project
           condition: succeeded()
           inputs:
             command: 'build'
             projects: '**/*.csproj'
         - task: Bash@3
           displayName: detect git origin
           inputs:
             targetType: 'inline'
             script: 'git fetch --unshallow'

         - task: GitVersion@5
           displayName: "Setup GitVersion"
           inputs:
             versionSpec: "5.x"

         - task: GitVersion@5
           inputs:
             versionSpec: '5.x'
           displayName: "GitVersion execute"
           
         - task: DotNetCoreCLI@2
           displayName: create nuget package
           inputs:
             command: 'pack'
             packagesToPack: '**/*.csproj'
             packDirectory: '$(Build.ArtifactStagingDirectory)'
             versionEnvVar: 'GitVersion.NuGetVersion'

         - task: NuGetCommand@2
           inputs:
             command: 'push'
             packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
             nuGetFeedType: 'internal'
             publishVstsFeed: '16ce4973-69f3-4ab5-af72-520f7669913e/8814bf2b-06c5-45ad-9b3d-ae6d56f68a9a'
             allowPackageConflicts: true
          
         - task: Bash@3
           displayName: Tag to project
           inputs:
             targetType: 'inline'
             script: |
               git config --global user.email "a.jorayev@baik.uz"
               git config --global user.name "Akhmadjon Jurayev"
               git tag -a $(GitVersion.SemVer) -m "Tagged version $(GitVersion.SemVer)"
               git push origin $(GitVersion.SemVer)
               echo $(GitVersion.SemVer)

         - task: Bash@3
           displayName: Login to Docker Hub
           inputs:
             targetType: 'inline'
             script: 'docker login -u akhmadjonjurayev -p dckr_pat_yBreYvmQFUwAYdv02ZuV_v07Y9w'
        #  - task: Docker@2
        #    inputs:
        #      containerRegistry: 'publish docker hub'
        #      repository: 'identityserver'
        #      command: 'buildAndPush'
        #      Dockerfile: '**/Dockerfile'
        #      tags: '$(GitVersion.SemVer)'

         - task: Docker@2
           displayName: Create docker image
           inputs:
             containerRegistry: 'publish docker hub'
             command: 'build'
             repository: identityserver
             Dockerfile: '**/Dockerfile'
             tags: $(GitVersion.SemVer)
               
         - task: Bash@3
           displayName: Docker build and push
           inputs:
             targetType: 'inline'
             script: |
               docker tag identityserver:$(GitVersion.SemVer) akhmadjonjurayev/identityserver:$(GitVersion.SemVer)
               docker image push akhmadjonjurayev/identityserver:$(GitVersion.SemVer)

